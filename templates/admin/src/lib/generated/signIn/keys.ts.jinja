// This file is generated and managed by Teo generator internally.
// It will be overwritten in next generation. Do not modify this file.

import { AccountModel } from "."

export type Field = {
    key: string
    name: string
    desc: string
}

export const idFieldsForModel: (model: AccountModel) => Field[] = (model: AccountModel) => {
    {%- for model in account_models %}
    if (model === "{{ model.name }}") {
        return [
        {%- for field in model.id_fields %}
            {
                key: "{{ field.name }}",
                name: "model.{{ model.name_lowercase }}.{{ field.name }}.name",
                desc: "model.{{ model.name_lowercase }}.{{ field.name }}.desc",
            },
        {%- endfor %}
        ]
    }
    {%- endfor %}
    return []
}

export const checkerFieldsForModel: (model: AccountModel) => Field[] = (model: AccountModel) => {
    {%- for model in account_models %}
    if (model === "{{ model.name }}") {
        return [
        {%- for field in model.checker_fields %}
            {
                key: "{{ field.name }}",
                name: "model.{{ model.name_lowercase }}.{{ field.name }}.name",
                desc: "model.{{ model.name_lowercase }}.{{ field.name }}.desc",
            },
        {%- endfor %}
        ]
    }
    {%- endfor %}
    return []
}

export const companionFieldsForModel: (model: AccountModel) => Field[] = (model: AccountModel) => {
    {%- for model in account_models %}
    if (model === "{{ model.name }}") {
        return [
        ]
    }
    {%- endfor %}
    return []
}